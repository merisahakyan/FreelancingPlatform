@using Microsoft.AspNetCore.Identity
@using MVC.Data
@using System.Security.Claims;

@model IEnumerable<Core.Models.ViewModels.WorkViewModel>

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Jobs";
}
@{
    Roles? userRole = null;
    if (User != null && User.Identity != null)
    {
        var claim = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier);
        User user;
        if (claim != null)
        {
            user = UserManager.FindByIdAsync(claim.Value).Result;
            userRole = user.Role;
        }
    }
}
<h2>Jobs </h2>
@if (userRole == Roles.Other)
{
    <button type="button" class="btn btn-primary">@Html.ActionLink("Create", "CreateNewJob")</button>
}
@if (!SignInManager.IsSignedIn(User) || (userRole.HasValue && userRole == Roles.Freelancer))
{
    <h4>Login for apply to job!</h4>
}
<hr />
<form asp-controller="Work" asp-action="Jobs">
    <p>
        Find by description: <input type="text" name="s" value="@ViewData["searchText"]">
        <input type="submit" value="Filter" class="btn btn-info" />
    </p>
</form>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Header)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Header)
                </td>
                <td>
                    @{
                        var desc = item.Description.Substring(0, 20) + "...";
                    }
                    @Html.DisplayFor(modelItem => desc)
                </td>
                <td>
                    <button type="button" class="btn btn-info">@Html.ActionLink("Details", "JobDetails", new { id = item.Id })</button>
                    |
                    @if (userRole.HasValue && userRole == Roles.Freelancer)
                    {
                        <button type="button" class="btn btn-success">@Html.ActionLink("Apply", "ApplyHire", new { id = item.Id })</button>

                    }
                </td>
            </tr>
        }
    </tbody>
</table>
